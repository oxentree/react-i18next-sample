{"version":3,"sources":["logo.svg","i18n.js","translations/locales/en/translations.js","translations/locales/es/translations.js","translations/locales/fr/translations.js","App.jsx","reportWebVitals.js","index.js"],"names":["translations","en","translation","hello","helloWithALink","helloWithALinkAlternative","es","fr","console","warn","i18n","use","initReactI18next","init","resources","lng","fallbackLng","debug","interpolation","escapeValue","useSuspense","Hello","t","useTranslation","HelloWithALink","Trans","i18nKey","href","HelloWithALinkAlternative","language","defaults","values","greeting","toLowerCase","components","boldCustom","App","fallback","className","onChange","e","changeLanguage","target","value","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,G,MAAA,IAA0B,kC,sBCQnCA,EAAe,CACjBC,GAAI,CACAC,YCVoB,CAExBC,MAAO,QAIPC,eAAgB,qDAChBC,0BAA2B,wEDK3BC,GAAI,CACAJ,YEboB,CAExBC,MAAO,OACPC,eAAgB,oDAChBC,0BAA2B,wEFW3BE,GAAI,CACAL,YGhBmB,CAEvBC,MAAO,UACPC,eAAgB,sDAChBC,0BAA2B,wEHgB/BG,QAAQC,KAAKT,GAEbU,IACKC,IAAIC,KACJC,KAAK,CACFC,UAAWd,EACXe,IAAK,KACLC,YAAa,KACbC,OAAO,EACPC,cAAe,CACXC,aAAa,EACbC,aAAa,KAIVV,QAAf,E,uBI5BA,SAASW,IACP,IAAQC,EAAMC,cAAND,EAER,OAAO,6BAAKA,EAAE,WAGhB,SAASE,IACP,IAAQF,EAAMC,cAAND,EAER,OACE,eAACG,EAAA,EAAD,CAAOH,EAAGA,EAAGI,QAAQ,iBAArB,qBACU,sCADV,WAC8B,mBAAGC,KAAK,IAAR,gCAKlC,SAASC,IACP,MAAoBL,cAAZD,EAAR,EAAQA,EAAGZ,EAAX,EAAWA,KACH,aAASA,EAAKmB,UAEtB,OACE,cAACJ,EAAA,EAAD,CACEC,QAAQ,4BACRI,SAAS,8CACTC,OAAQ,CACNC,SAAWV,EAAE,SAAUW,eAEzBC,WAAY,CAAEC,WAAY,8BA6BjBC,MAxBf,WACE,OACE,cAAC,WAAD,CAAUC,SAAS,aAAnB,SACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yBAAQC,SAAU,SAAAC,GAAC,OAAI9B,EAAK+B,eAAeD,EAAEE,OAAOC,QAApD,UACE,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,4BAEF,qBAAKC,IAAKC,EAAMP,UAAU,WAAWQ,IAAI,SACzC,cAACzB,EAAD,IACA,4BACE,cAACG,EAAD,MAEF,4BACE,cAACI,EAAD,cC3CGmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d16c9d56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import i18n from 'i18next'\r\nimport {\r\n    initReactI18next\r\n} from 'react-i18next'\r\nimport translationsEN from './translations/locales/en/translations.js'\r\nimport translationsES from './translations/locales/es/translations.js'\r\nimport translationsFR from './translations/locales/fr/translations.js'\r\n\r\nconst translations = {\r\n    en: {\r\n        translation: translationsEN\r\n    },\r\n    es: {\r\n        translation: translationsES\r\n    },\r\n    fr: {\r\n        translation: translationsFR\r\n    },\r\n}\r\n\r\nconsole.warn(translations)\r\n\r\ni18n\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources: translations,\r\n        lng: \"en\",\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n        interpolation: {\r\n            escapeValue: false,\r\n            useSuspense: false\r\n        }\r\n    })\r\n\r\nexport default i18n","const englishTranslations = {\r\n    // this is hello in English\r\n    hello: \"Hello\",\r\n    // 1 and 3 are the indexes in the node tree, strings are legit HTML nodes!\r\n    // just inspect the Trans via React Chrome debugger and see the correct array\r\n    // developer should do this, translator should just respect the tags\r\n    helloWithALink: \"This is <1>hello</1> with a <3>link in English</3>\",\r\n    helloWithALinkAlternative: \"The English word for hello is <boldCustom>{{greeting}}</boldCustom>\"\r\n}\r\n\r\nexport default englishTranslations","const spanishTranslations = {\r\n    // this is hello in Spanish\r\n    hello: \"Hola\",\r\n    helloWithALink: \"This is <1>hola</1> with a <3>link in Spanish</3>\",\r\n    helloWithALinkAlternative: \"The Spanish word for hello is <boldCustom>{{greeting}}</boldCustom>\"\r\n}\r\n\r\nexport default spanishTranslations","const frenchTranslations = {\r\n    // this is hello in French\r\n    hello: \"Bonjour\",\r\n    helloWithALink: \"This is <1>bonjour</1> with a <3>link in French</3>\",\r\n    helloWithALinkAlternative: \"The French word for hello is <boldCustom>{{greeting}}</boldCustom>\"\r\n}\r\n\r\nexport default frenchTranslations","import logo from './logo.svg';\nimport './App.css';\nimport './i18n'\nimport i18n from './i18n';\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Suspense } from 'react';\n\nfunction Hello() {\n  const { t } = useTranslation()\n\n  return <h1>{t('hello')}</h1>\n}\n\nfunction HelloWithALink() {\n  const { t } = useTranslation()\n\n  return (\n    <Trans t={t} i18nKey=\"helloWithALink\">\n      This is <b>hello</b> with a <a href=\"/\">link in English</a>\n    </Trans>\n  )\n}\n\nfunction HelloWithALinkAlternative() {\n  const { t, i18n } = useTranslation()\n  let link = `/?=${i18n.language}`\n\n  return (\n    <Trans\n      i18nKey=\"helloWithALinkAlternative\"\n      defaults=\"This is <boldCustom>{greeting}</boldCustom>\" // optional\n      values={{\n        greeting: (t('hello')).toLowerCase(),\n      }}\n      components={{ boldCustom: <strong /> }}\n    />\n  )\n}\n\nfunction App() {\n  return (\n    <Suspense fallback=\"Loading...\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <select onChange={e => i18n.changeLanguage(e.target.value)}>\n            <option value=\"en\">English</option>\n            <option value=\"es\">Español</option>\n            <option value=\"fr\">Français</option>\n          </select>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Hello />\n          <p>\n            <HelloWithALink />\n          </p>\n          <p>\n            <HelloWithALinkAlternative />\n          </p>\n        </header>\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}